{"version":3,"sources":["../../../src/components/withPermissions/index.jsx"],"names":["Set","ImmutableSet","React","hoistNonReactStatics","cachedValue","cachedSubscribe","cachedUnsubscribe","parameters","wrap","Component","getName","props","id","idName","sourceId","sourceIdName","undefined","NewComponent","getDerivedStateFromProps","nextProps","prevState","name","permissions","constructor","value","setState","state","componentDidMount","handleUpdate","shouldComponentUpdate","nextState","nextPropsKeys","Object","keys","propsKeys","length","i","key","componentWillUnmount","render","assign","propertyName"],"mappings":"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","sourcesContent":["// @flow\n\nimport { Set as ImmutableSet } from 'immutable';\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { cachedValue, cachedSubscribe, cachedUnsubscribe } from '../../index';\n\ntype Parameters = {\n  propertyName?: string,\n  idName?: string,\n  sourceIdName?: string,\n};\n\ntype State = {\n  name?: string,\n  permissions?: ImmutableSet<string>,\n};\n\nexport default (parameters: Parameters = {}) => function wrap<Props: Object>(Component: React.AbstractComponent<Props>): React.AbstractComponent<$Diff<Props, { [string]: ImmutableSet<string> }>> {\n  const getName = (props: Props) => {\n    const id = parameters.idName ? props[parameters.idName] : props.id;\n    const sourceId = parameters.sourceIdName ? props[parameters.sourceIdName] : props.sourceId;\n    if (!sourceId || !id) {\n      return undefined;\n    }\n    return `p/${sourceId}/${id}`;\n  };\n\n  class NewComponent extends React.Component<Props, State> {\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n      const name = getName(nextProps);\n      if (name !== prevState.name) {\n        return {\n          name,\n          permissions: cachedValue(name),\n        };\n      }\n      return null;\n    }\n\n    constructor(props: Props) {\n      super(props);\n      const name = getName(props);\n      this.state = {\n        name,\n        permissions: cachedValue(name),\n      };\n    }\n\n    async componentDidMount() {\n      if (this.state.name) {\n        cachedSubscribe(this.state.name, this.handleUpdate);\n      }\n    }\n\n    shouldComponentUpdate(nextProps:Props, nextState:State) {\n      if (this.state.name !== nextState.name) {\n        const name = this.state.name;\n        if (name) {\n          cachedUnsubscribe(name, this.handleUpdate);\n        }\n        if (nextState.name) {\n          cachedSubscribe(nextState.name, this.handleUpdate);\n        }\n      }\n      if (this.state.permissions !== nextState.permissions) {\n        return true;\n      }\n      const nextPropsKeys = Object.keys(nextProps);\n      const propsKeys = Object.keys(this.props);\n      if (nextPropsKeys.length !== propsKeys.length) {\n        return true;\n      }\n      for (let i = 0; i < propsKeys.length; i += 1) {\n        const key = propsKeys[i];\n        if (nextProps[key] !== this.props[key]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    async componentWillUnmount() {\n      if (this.state.name) {\n        cachedUnsubscribe(this.state.name, this.handleUpdate);\n      }\n    }\n\n\n    handleUpdate = (value:any) => {\n      this.setState({\n        permissions: value,\n      });\n    }\n\n    render() {\n      const props = Object.assign({}, { [parameters.propertyName || 'permissions']: this.state.permissions }, this.props);\n      return <Component {...props} />;\n    }\n  }\n\n  hoistNonReactStatics(NewComponent, Component);\n\n  return NewComponent;\n};\n\n"],"file":"index.js"}