{"version":3,"sources":["../../../src/components/withNotifications/index.jsx"],"names":["React","isEmpty","pick","omit","queryString","hoistNonReactStatics","cachedValue","cachedSubscribe","cachedUnsubscribe","logSubscribeError","parameterNames","Set","getParameters","args","Object","assign","parameters","wrap","Component","getName","props","id","idName","ids","idsName","teamId","teamIdName","hasIds","Array","isArray","length","undefined","nodeIds","join","options","stringify","NewComponent","getDerivedStateFromProps","nextProps","prevState","name","notifications","constructor","value","setState","error","state","componentDidMount","handleUpdate","handleError","shouldComponentUpdate","nextState","nextPropsKeys","keys","filter","key","has","propsKeys","i","componentWillUnmount","render","propertyName"],"mappings":"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","sourcesContent":["// @flow\nimport type { List } from 'immutable';\nimport * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport pick from 'lodash/pick';\nimport omit from 'lodash/omit';\nimport queryString from 'query-string';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { cachedValue, cachedSubscribe, cachedUnsubscribe } from '../../index';\nimport { logSubscribeError } from '../lib/error-logging';\n\nconst parameterNames = new Set([\n  'limit',\n  'offset',\n  'filterNamed',\n  'query',\n]);\n\nconst getParameters = (...args:Array<Object>):Parameters => pick(Object.assign({}, ...args), [...parameterNames]);\n\ntype Parameters = {\n  limit?: number,\n  offset?: number,\n  filterNamed?: boolean,\n  query?: string,\n  propertyName?: string,\n  idName?: string,\n  teamIdName?: string,\n  idsName?: string,\n};\n\ntype State = {\n  name?: string,\n  notifications?: List<string>\n};\n\nexport default (parameters: Parameters = {}) => function wrap<Props: Object>(Component: React.AbstractComponent<Props>): React.AbstractComponent<$Diff<Props, { [string]: List<string> }>> {\n  const getName = (props: Props) => {\n    const id = parameters.idName ? props[parameters.idName] : props.id;\n    const ids = parameters.idsName ? props[parameters.idsName] : props.ids;\n    const teamId = parameters.teamIdName ? props[parameters.teamIdName] : props.teamId;\n\n    const hasIds = (Array.isArray(ids) && ids.length > 0);\n    if ((!id && !hasIds) || !teamId) {\n      return undefined;\n    }\n    const nodeIds = hasIds ? ids.join('/') : id;\n    const options = getParameters(parameters, props);\n    if (isEmpty(options)) {\n      return `notifications/${teamId}/${nodeIds}`;\n    }\n    return `notifications/${teamId}/${nodeIds}?${queryString.stringify(options)}`;\n  };\n\n  class NewComponent extends React.Component<Props, State> {\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n      const name = getName(nextProps);\n      if (name !== prevState.name) {\n        return {\n          name,\n          notifications: cachedValue(name),\n        };\n      }\n      return null;\n    }\n\n    constructor(props: Props) {\n      super(props);\n      const name = getName(props);\n      this.state = {\n        name,\n        notifications: cachedValue(name),\n      };\n    }\n\n    async componentDidMount() {\n      if (this.state.name) {\n        cachedSubscribe(this.state.name, this.handleUpdate, this.handleError);\n      }\n    }\n\n    shouldComponentUpdate(nextProps:Props, nextState:State) {\n      if (this.state.name !== nextState.name) {\n        const name = this.state.name;\n        if (name) {\n          cachedUnsubscribe(name, this.handleUpdate, this.handleError);\n        }\n        if (nextState.name) {\n          cachedSubscribe(nextState.name, this.handleUpdate, this.handleError);\n        }\n      }\n      if (this.state.notifications !== nextState.notifications) {\n        return true;\n      }\n      const nextPropsKeys = Object.keys(nextProps).filter((key) => !parameterNames.has(key));\n      const propsKeys = Object.keys(this.props).filter((key) => !parameterNames.has(key));\n      if (nextPropsKeys.length !== propsKeys.length) {\n        return true;\n      }\n      for (let i = 0; i < propsKeys.length; i += 1) {\n        const key = propsKeys[i];\n        if (nextProps[key] !== this.props[key]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    async componentWillUnmount() {\n      if (this.state.name) {\n        cachedUnsubscribe(this.state.name, this.handleUpdate, this.handleError);\n      }\n    }\n\n\n    handleUpdate = (value:any) => {\n      this.setState({\n        notifications: value,\n      });\n    }\n\n    handleError = (error:Error) => {\n      logSubscribeError(this.state.name, error);\n    }\n    \n    render() {\n      const props = omit(this.props, [...parameterNames]);\n      props[parameters.propertyName || 'notifications'] = this.state.notifications;\n      return <Component {...props} />;\n    }\n  }\n\n  hoistNonReactStatics(NewComponent, Component);\n\n  return NewComponent;\n};\n"],"file":"index.js"}