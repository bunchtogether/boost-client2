{"version":3,"sources":["../../../src/components/withEdge/index.jsx"],"names":["React","hoistNonReactStatics","cachedValue","cachedSubscribe","cachedUnsubscribe","logSubscribeError","parameters","wrap","Component","getName","props","id","idName","childId","childIdName","undefined","NewComponent","getDerivedStateFromProps","nextProps","prevState","name","edge","constructor","value","setState","error","state","componentDidMount","handleUpdate","handleError","shouldComponentUpdate","nextState","nextPropsKeys","Object","keys","propsKeys","length","i","key","componentWillUnmount","render","assign","propertyName"],"mappings":"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","sourcesContent":["// @flow\n\nimport type { Map as ImmutableMap } from 'immutable';\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { cachedValue, cachedSubscribe, cachedUnsubscribe } from '../../index';\nimport { logSubscribeError } from '../lib/error-logging';\n\ntype Parameters = {\n  propertyName?: string,\n  idName?: string,\n  childIdName?: string,\n};\n\ntype State = {\n  name?: string,\n  edge?: ImmutableMap<string, *>\n};\n\nexport default (parameters: Parameters = {}) => function wrap<Props: Object>(Component: React.AbstractComponent<Props>): React.AbstractComponent<$Diff<Props, { [string]: ImmutableMap<string, *> }>> {\n  const getName = (props: Props) => {\n    const id = parameters.idName ? props[parameters.idName] : props.id;\n    const childId = parameters.childIdName ? props[parameters.childIdName] : props.childId;\n    if (!id || !childId) {\n      return undefined;\n    }\n    return `e/${id}/${childId}`;\n  };\n\n  class NewComponent extends React.Component<Props, State> {\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n      const name = getName(nextProps);\n      if (name !== prevState.name) {\n        return {\n          name,\n          edge: cachedValue(name),\n        };\n      }\n      return null;\n    }\n\n    constructor(props: Props) {\n      super(props);\n      const name = getName(props);\n      this.state = {\n        name,\n        edge: cachedValue(name),\n      };\n    }\n\n    async componentDidMount() {\n      if (this.state.name) {\n        cachedSubscribe(this.state.name, this.handleUpdate, this.handleError);\n      }\n    }\n\n    shouldComponentUpdate(nextProps:Props, nextState:State) {\n      if (this.state.name !== nextState.name) {\n        const name = this.state.name;\n        if (name) {\n          cachedUnsubscribe(name, this.handleUpdate, this.handleError);\n        }\n        if (nextState.name) {\n          cachedSubscribe(nextState.name, this.handleUpdate, this.handleError);\n        }\n      }\n      if (this.state.edge !== nextState.edge) {\n        return true;\n      }\n      const nextPropsKeys = Object.keys(nextProps);\n      const propsKeys = Object.keys(this.props);\n      if (nextPropsKeys.length !== propsKeys.length) {\n        return true;\n      }\n      for (let i = 0; i < propsKeys.length; i += 1) {\n        const key = propsKeys[i];\n        if (nextProps[key] !== this.props[key]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    async componentWillUnmount() {\n      if (this.state.name) {\n        cachedUnsubscribe(this.state.name, this.handleUpdate, this.handleError);\n      }\n    }\n\n\n    handleUpdate = (value:any) => {\n      this.setState({\n        edge: value,\n      });\n    }\n\n    handleError = (error:Error) => {\n      logSubscribeError(this.state.name, error);\n    }\n    \n    render() {\n      const props = Object.assign({}, { [parameters.propertyName || 'edge']: this.state.edge }, this.props);\n      return <Component {...props} />;\n    }\n  }\n\n  hoistNonReactStatics(NewComponent, Component);\n\n  return NewComponent;\n};\n\n"],"file":"index.js"}