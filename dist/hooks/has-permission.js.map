{"version":3,"sources":["../../src/hooks/has-permission.js"],"names":["useState","useEffect","useRef","List","cachedValue","cachedSubscribe","cachedUnsubscribe","parse","v","permission","isList","includes","undefined","getName","sourceId","targetId","value","setValue","initialCallbackRef","skipInitialCallback","current","name","handleValue"],"mappings":"AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,iBAAvC,QAAgE,IAAhE;;AAEA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAQC,UAAR,KAA8B;AAC1C,MAAIN,IAAI,CAACO,MAAL,CAAYF,CAAZ,CAAJ,EAAoB;AAClB,WAAOA,CAAC,CAACG,QAAF,CAAWF,UAAX,CAAP;AACD;;AACD,SAAOG,SAAP;AACD,CALD;;AAOA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAkBC,QAAlB,KAAuC,KAAID,QAAS,IAAGC,QAAS,EAAhF;;AAEA,gBAAe,CAACD,QAAD,EAAoBC,QAApB,EAAuCN,UAAvC,KAA8D;AAC3E,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,OAAOc,QAAP,KAAoB,QAApB,IAAgC,OAAOC,QAAP,KAAoB,QAApD,GAA+DR,KAAK,CAACH,WAAW,CAACS,OAAO,CAACC,QAAD,EAAWC,QAAX,CAAR,CAAZ,EAA2CN,UAA3C,CAApE,GAA6HG,SAA9H,CAAlC;AACA,QAAMM,kBAAkB,GAAGhB,MAAM,CAAC,OAAOc,KAAP,KAAiB,WAAjB,IAAgC,OAAOF,QAAP,KAAoB,QAApD,IAAgE,OAAOC,QAAP,KAAoB,QAArF,CAAjC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,mBAAmB,GAAGD,kBAAkB,CAACE,OAA/C;AACAF,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,KAA7B;;AACA,QAAI,OAAON,QAAP,KAAoB,QAApB,IAAgC,OAAOC,QAAP,KAAoB,QAAxD,EAAkE;AAChE,UAAI,CAACI,mBAAL,EAA0B;AACxBF,QAAAA,QAAQ,CAACL,SAAD,CAAR;AACD;;AACD;AACD;;AACD,UAAMS,IAAI,GAAGR,OAAO,CAACC,QAAD,EAAWC,QAAX,CAApB;;AAEA,UAAMO,WAAW,GAAId,CAAD,IAAW;AAC7BS,MAAAA,QAAQ,CAACV,KAAK,CAACC,CAAD,EAAIC,UAAJ,CAAN,CAAR;AACD,KAFD;;AAIAJ,IAAAA,eAAe,CAACgB,IAAD,EAAOC,WAAP,EAAoBV,SAApB,EAA+BO,mBAA/B,CAAf;AACA,WAAO,MAAM;AAAE;AACbb,MAAAA,iBAAiB,CAACe,IAAD,EAAOC,WAAP,CAAjB;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACR,QAAD,EAAWC,QAAX,EAAqBN,UAArB,CAnBM,CAAT;AAqBA,SAAOO,KAAP;AACD,CA1BD","sourcesContent":["// @flow\n\nimport { useState, useEffect, useRef } from 'react';\nimport { List } from 'immutable';\nimport { cachedValue, cachedSubscribe, cachedUnsubscribe } from '..';\n\nconst parse = (v:any, permission:string) => {\n  if (List.isList(v)) {\n    return v.includes(permission);\n  }\n  return undefined;\n};\n\nconst getName = (sourceId:string, targetId:string) => `p/${sourceId}/${targetId}`;\n\nexport default (sourceId?: string, targetId?: string, permission: string) => {\n  const [value, setValue] = useState(typeof sourceId === 'string' && typeof targetId === 'string' ? parse(cachedValue(getName(sourceId, targetId)), permission) : undefined);\n  const initialCallbackRef = useRef(typeof value !== 'undefined' || typeof sourceId !== 'string' || typeof targetId !== 'string');\n\n  useEffect(() => {\n    const skipInitialCallback = initialCallbackRef.current;\n    initialCallbackRef.current = false;\n    if (typeof sourceId !== 'string' || typeof targetId !== 'string') {\n      if (!skipInitialCallback) {\n        setValue(undefined);\n      }\n      return;\n    }\n    const name = getName(sourceId, targetId);\n\n    const handleValue = (v:any) => {\n      setValue(parse(v, permission));\n    };\n\n    cachedSubscribe(name, handleValue, undefined, skipInitialCallback);\n    return () => { // eslint-disable-line consistent-return\n      cachedUnsubscribe(name, handleValue);\n    };\n  }, [sourceId, targetId, permission]);\n\n  return value;\n};\n"],"file":"has-permission.js"}