{"version":3,"sources":["../../src/hooks/node.js"],"names":["Map","useParseBraidValue","parse","v","isMap","undefined","getName","id","useNode","name"],"mappings":"AAEA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;;AAEA,MAAMC,KAAK,GAAIC,CAAD,IAAW;AACvB,MAAIH,GAAG,CAACI,KAAJ,CAAUD,CAAV,CAAJ,EAAkB;AAChB,WAAOA,CAAP;AACD;;AACD,SAAOE,SAAP;AACD,CALD;;AAOA,MAAMC,OAAO,GAAIC,EAAD,IAAgB;AAC9B,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOF,SAAP;AACD;;AACD,SAAQ,KAAIE,EAAG,EAAf;AACD,CALD;;AAOA,eAAe,SAASC,OAAT,CAAiBD,EAAjB,EAA8B;AAC3C,QAAME,IAAI,GAAGH,OAAO,CAACC,EAAD,CAApB;AACA,SAAON,kBAAkB,CAACQ,IAAD,EAAOP,KAAP,CAAzB;AACD","sourcesContent":["// @flow\n\nimport { Map } from 'immutable';\nimport useParseBraidValue from './parse-braid-value';\n\nconst parse = (v:any) => {\n  if (Map.isMap(v)) {\n    return v;\n  }\n  return undefined;\n};\n\nconst getName = (id?:string) => {\n  if (typeof id !== 'string') {\n    return undefined;\n  }\n  return `n/${id}`;\n};\n\nexport default function useNode(id?: string) {\n  const name = getName(id);\n  return useParseBraidValue(name, parse);\n}\n"],"file":"node.js"}