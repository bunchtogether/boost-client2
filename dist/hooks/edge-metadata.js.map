{"version":3,"sources":["../../src/hooks/edge-metadata.js"],"names":["useState","useEffect","useRef","Map","cachedValue","cachedSubscribe","cachedUnsubscribe","parse","v","path","isMap","getIn","undefined","getName","parent","child","metadataPath","concat","value","setValue","initialCallbackRef","skipInitialCallback","current","name","handleValue","JSON","stringify"],"mappings":"AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,iBAAvC,QAAgE,OAAhE;;AAEA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAQC,IAAR,KAA+B;AAC3C,MAAIN,GAAG,CAACO,KAAJ,CAAUF,CAAV,CAAJ,EAAkB;AAChB,WAAOA,CAAC,CAACG,KAAF,CAAQF,IAAR,CAAP;AACD;;AACD,SAAOG,SAAP;AACD,CALD;;AAOA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAAgBC,KAAhB,KAAkC,KAAID,MAAO,IAAGC,KAAM,EAAtE;;AAEA,gBAAe,CAACD,MAAD,EAAkBC,KAAlB,EAAkCC,YAAlC,KAAiE;AAC9E,QAAMP,IAAI,GAAG,CAAC,UAAD,EAAaQ,MAAb,CAAoBD,YAApB,CAAb;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,OAAOc,MAAP,KAAkB,QAAlB,IAA8B,OAAOC,KAAP,KAAiB,QAA/C,GAA0DR,KAAK,CAACH,WAAW,CAACS,OAAO,CAACC,MAAD,EAASC,KAAT,CAAR,CAAZ,EAAsCN,IAAtC,CAA/D,GAA6GG,SAA9G,CAAlC;AACA,QAAMQ,kBAAkB,GAAGlB,MAAM,CAAC,OAAOgB,KAAP,KAAiB,WAAjB,IAAgC,OAAOJ,MAAP,KAAkB,QAAlD,IAA8D,OAAOC,KAAP,KAAiB,QAAhF,CAAjC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,mBAAmB,GAAGD,kBAAkB,CAACE,OAA/C;AACAF,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,KAA7B;;AACA,QAAI,OAAOR,MAAP,KAAkB,QAAlB,IAA8B,OAAOC,KAAP,KAAiB,QAAnD,EAA6D;AAC3D,UAAI,CAACM,mBAAL,EAA0B;AACxBF,QAAAA,QAAQ,CAACP,SAAD,CAAR;AACD;;AACD;AACD;;AACD,UAAMW,IAAI,GAAGV,OAAO,CAACC,MAAD,EAASC,KAAT,CAApB;;AAEA,UAAMS,WAAW,GAAIhB,CAAD,IAAW;AAC7BW,MAAAA,QAAQ,CAACZ,KAAK,CAACC,CAAD,EAAIC,IAAJ,CAAN,CAAR;AACD,KAFD;;AAIAJ,IAAAA,eAAe,CAACkB,IAAD,EAAOC,WAAP,EAAoBZ,SAApB,EAA+BS,mBAA/B,CAAf;AACA,WAAO,MAAM;AAAE;AACbf,MAAAA,iBAAiB,CAACiB,IAAD,EAAOC,WAAP,CAAjB;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACV,MAAD,EAASC,KAAT,EAAgBU,IAAI,CAACC,SAAL,CAAeV,YAAf,CAAhB,CAnBM,CAAT;AAqBA,SAAOE,KAAP;AACD,CA5BD","sourcesContent":["// @flow\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Map } from 'immutable';\nimport { cachedValue, cachedSubscribe, cachedUnsubscribe } from '../..';\n\nconst parse = (v:any, path:Array<string>) => {\n  if (Map.isMap(v)) {\n    return v.getIn(path);\n  }\n  return undefined;\n};\n\nconst getName = (parent:string, child:string) => `e/${parent}/${child}`;\n\nexport default (parent?: string, child?: string, metadataPath:Array<string>) => {\n  const path = ['metadata'].concat(metadataPath);\n\n  const [value, setValue] = useState(typeof parent === 'string' && typeof child === 'string' ? parse(cachedValue(getName(parent, child)), path) : undefined);\n  const initialCallbackRef = useRef(typeof value !== 'undefined' || typeof parent !== 'string' || typeof child !== 'string');\n\n  useEffect(() => {\n    const skipInitialCallback = initialCallbackRef.current;\n    initialCallbackRef.current = false;\n    if (typeof parent !== 'string' || typeof child !== 'string') {\n      if (!skipInitialCallback) {\n        setValue(undefined);\n      }\n      return;\n    }\n    const name = getName(parent, child);\n\n    const handleValue = (v:any) => {\n      setValue(parse(v, path));\n    };\n\n    cachedSubscribe(name, handleValue, undefined, skipInitialCallback);\n    return () => { // eslint-disable-line consistent-return\n      cachedUnsubscribe(name, handleValue);\n    };\n  }, [parent, child, JSON.stringify(metadataPath)]);\n\n  return value;\n};\n"],"file":"edge-metadata.js"}