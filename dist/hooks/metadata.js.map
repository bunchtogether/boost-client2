{"version":3,"sources":["../../src/hooks/metadata.js"],"names":["useState","useEffect","useRef","cachedValue","cachedSubscribe","cachedUnsubscribe","getName","id","path","map","x","encodeURIComponent","join","value","setValue","Array","isArray","undefined","initialCallbackRef","skipInitialCallback","current","name","handleValue","v","JSON","stringify"],"mappings":"AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,iBAAvC,QAAgE,IAAhE;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAYC,IAAZ,KAAoC,KAAID,EAAG,aAAYC,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOC,kBAAkB,CAACD,CAAD,CAAlC,EAAuCE,IAAvC,CAA4C,GAA5C,CAAiD,EAAxH;;AAEA,gBAAe,CAACL,EAAD,EAAcC,IAAd,KAAqC;AAClD,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,OAAOO,EAAP,KAAc,QAAd,IAA0BQ,KAAK,CAACC,OAAN,CAAcR,IAAd,CAA1B,GAAgDL,WAAW,CAACG,OAAO,CAACC,EAAD,EAAKC,IAAL,CAAR,CAA3D,GAAiFS,SAAlF,CAAlC;AAEA,QAAMC,kBAAkB,GAAGhB,MAAM,CAAC,OAAOW,KAAP,KAAiB,WAAjB,IAAgC,OAAON,EAAP,KAAc,QAA9C,IAA0D,CAACQ,KAAK,CAACC,OAAN,CAAcR,IAAd,CAA5D,CAAjC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,mBAAmB,GAAGD,kBAAkB,CAACE,OAA/C;AACAF,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,KAA7B;;AACA,QAAI,OAAOb,EAAP,KAAc,QAAd,IAA0B,CAACQ,KAAK,CAACC,OAAN,CAAcR,IAAd,CAA/B,EAAoD;AAClD,UAAI,CAACW,mBAAL,EAA0B;AACxBL,QAAAA,QAAQ,CAACG,SAAD,CAAR;AACD;;AACD;AACD;;AAED,UAAMI,IAAI,GAAGf,OAAO,CAACC,EAAD,EAAKC,IAAL,CAApB;;AAEA,UAAMc,WAAW,GAAIC,CAAD,IAAW;AAC7BT,MAAAA,QAAQ,CAACS,CAAD,CAAR;AACD,KAFD;;AAIAnB,IAAAA,eAAe,CAACiB,IAAD,EAAOC,WAAP,EAAoBL,SAApB,EAA+BE,mBAA/B,CAAf;AACA,WAAO,MAAM;AAAE;AACbd,MAAAA,iBAAiB,CAACgB,IAAD,EAAOC,WAAP,CAAjB;AACD,KAFD;AAGD,GApBQ,EAoBN,CAACf,EAAD,EAAKiB,IAAI,CAACC,SAAL,CAAejB,IAAf,CAAL,CApBM,CAAT;AAsBA,SAAOK,KAAP;AACD,CA5BD","sourcesContent":["// @flow\n\nimport { useState, useEffect, useRef } from 'react';\nimport { cachedValue, cachedSubscribe, cachedUnsubscribe } from '..';\n\nconst getName = (id:string, path:Array<string>) => `n/${id}/metadata/${path.map((x) => encodeURIComponent(x)).join('/')}`;\n\nexport default (id?: string, path:Array<string>) => {\n  const [value, setValue] = useState(typeof id === 'string' && Array.isArray(path) ? cachedValue(getName(id, path)) : undefined);\n\n  const initialCallbackRef = useRef(typeof value !== 'undefined' || typeof id !== 'string' || !Array.isArray(path));\n\n  useEffect(() => {\n    const skipInitialCallback = initialCallbackRef.current;\n    initialCallbackRef.current = false;\n    if (typeof id !== 'string' || !Array.isArray(path)) {\n      if (!skipInitialCallback) {\n        setValue(undefined);\n      }\n      return;\n    }\n\n    const name = getName(id, path);\n\n    const handleValue = (v:any) => {\n      setValue(v);\n    };\n\n    cachedSubscribe(name, handleValue, undefined, skipInitialCallback);\n    return () => { // eslint-disable-line consistent-return\n      cachedUnsubscribe(name, handleValue);\n    };\n  }, [id, JSON.stringify(path)]);\n\n  return value;\n};\n"],"file":"metadata.js"}