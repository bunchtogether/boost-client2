{"version":3,"sources":["../../src/hooks/metadata.js"],"names":["parseBraidValueHook","parse","v","getName","id","path","undefined","Array","isArray","map","x","encodeURIComponent","join","name"],"mappings":"AAEA,OAAOA,mBAAP,MAAgC,qBAAhC;;AAEA,MAAMC,KAAK,GAAIC,CAAD,IAAWA,CAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAaC,IAAb,KAAoC;AAClD,MAAI,OAAOD,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOE,SAAP;AACD;;AACD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACxB,WAAOC,SAAP;AACD;;AACD,SAAQ,KAAIF,EAAG,aAAYC,IAAI,CAACI,GAAL,CAAUC,CAAD,IAAOC,kBAAkB,CAACD,CAAD,CAAlC,EAAuCE,IAAvC,CAA4C,GAA5C,CAAiD,EAA5E;AACD,CARD;;AAUA,gBAAe,CAACR,EAAD,EAAcC,IAAd,KAAqC;AAClD,QAAMQ,IAAI,GAAGV,OAAO,CAACC,EAAD,EAAKC,IAAL,CAApB;AACA,SAAOL,mBAAmB,CAACa,IAAD,EAAOZ,KAAP,CAA1B;AACD,CAHD","sourcesContent":["// @flow\n\nimport parseBraidValueHook from './parse-braid-value';\n\nconst parse = (v:any) => v;\n\nconst getName = (id?:string, path:Array<string>) => {\n  if (typeof id !== 'string') {\n    return undefined;\n  }\n  if (!Array.isArray(path)) {\n    return undefined;\n  }\n  return `n/${id}/metadata/${path.map((x) => encodeURIComponent(x)).join('/')}`;\n};\n\nexport default (id?: string, path:Array<string>) => {\n  const name = getName(id, path);\n  return parseBraidValueHook(name, parse);\n};\n"],"file":"metadata.js"}