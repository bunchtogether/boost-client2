{"version":3,"sources":["../../src/hooks/tag.js"],"names":["Map","useParseBraidValue","parse","v","isMap","undefined","getName","source","target","name"],"mappings":"AAEA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;;AAEA,MAAMC,KAAK,GAAIC,CAAD,IAAW;AACvB,MAAIH,GAAG,CAACI,KAAJ,CAAUD,CAAV,CAAJ,EAAkB;AAChB,WAAOA,CAAP;AACD;;AACD,SAAOE,SAAP;AACD,CALD;;AAOA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAAkBC,MAAlB,KAAsC;AACpD,MAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOF,SAAP;AACD;;AACD,MAAI,OAAOG,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOH,SAAP;AACD;;AACD,SAAQ,QAAOE,MAAO,IAAGC,MAAO,EAAhC;AACD,CARD;;AAUA,gBAAe,CAACD,MAAD,EAAkBC,MAAlB,KAAsC;AACnD,QAAMC,IAAI,GAAGH,OAAO,CAACC,MAAD,EAASC,MAAT,CAApB;AACA,SAAOP,kBAAkB,CAACQ,IAAD,EAAOP,KAAP,CAAzB;AACD,CAHD","sourcesContent":["// @flow\n\nimport { Map } from 'immutable';\nimport useParseBraidValue from './parse-braid-value';\n\nconst parse = (v:any) => {\n  if (Map.isMap(v)) {\n    return v;\n  }\n  return undefined;\n};\n\nconst getName = (source?: string, target?: string) => {\n  if (typeof source !== 'string') {\n    return undefined;\n  }\n  if (typeof target !== 'string') {\n    return undefined;\n  }\n  return `tags/${source}/${target}`;\n};\n\nexport default (source?: string, target?: string) => {\n  const name = getName(source, target);\n  return useParseBraidValue(name, parse);\n};\n"],"file":"tag.js"}