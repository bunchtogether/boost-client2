{"version":3,"sources":["../src/index.js"],"names":["fromJS","eventChannel","buffers","Client","EventEmitter","Storage","unsubscribeMap","Map","callbackMap","errbackMap","cache","affirmed","metricsEmitter","BoostCatastrophicError","Error","constructor","message","name","flushIgnorePrefixes","Set","braidClient","braidClientOpen","Date","now","on","cacheSet","flushPromise","flush","key","prefix","startsWith","_flush","then","catch","error","console","Promise","resolve","setTimeout","requestAnimationFrame","dump","data","filter","x","has","dumpString","JSON","stringify","set","loadQueue","loadAsync","get","parse","process","setImmediate","add","delete","value","cached","callbackSet","callback","isLoaded","loadStart","emit","hasError","errback","skipInitialCallback","cachedSubscribe","length","subscribeWithErrorHandler","subscribe","errbackSet","eb","code","log","cachedValue","wrappedCallbacks","wrappedErrbacks","push","start","receivedInitialValue","webSocket","ws","wrappedCallback","webSocketWait","wrappedErrback","unsubscribeInterval","unsubscribeCheck","time","unsubscribe","size","clearInterval","undefined","cachedUnsubscribe","setInterval","getReduxChannel","defaultValue","handleValue","handleError","expanding","cachedSnapshot","snapshot","reject","removeListener","handleAffirm","k","v","immutableValue","triggerDelete"],"mappings":"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","sourcesContent":["// @flow\n\nimport type { EventChannel } from 'redux-saga';\nimport { fromJS } from 'immutable';\nimport { eventChannel, buffers } from 'redux-saga';\nimport Client from '@bunchtogether/braid-client';\nimport EventEmitter from 'events';\nimport * as Storage from './storage';\n\nconst unsubscribeMap:Map<string, number> = new Map();\nconst callbackMap:Map<string, Set<(any) => void>> = new Map();\nconst errbackMap:Map<string, Set<(Error) => void>> = new Map();\nconst cache = {};\nconst affirmed = {};\n\nexport const metricsEmitter = new EventEmitter();\n\nexport class BoostCatastrophicError extends Error {\n  constructor(message:string) {\n    super(message);\n    this.name = 'BoostCatastrophicError';\n  }\n}\n\nexport const flushIgnorePrefixes:Set<string> = new Set();\n\nexport const braidClient = new Client();\n\nlet braidClientOpen = Date.now();\n\nbraidClient.on('open', () => {\n  braidClientOpen = Date.now();\n});\n\nconst cacheSet = new Set();\nlet flushPromise = null;\nconst flush = (key:string) => {\n  if (flushPromise) {\n    return flushPromise;\n  }\n  for (const prefix of flushIgnorePrefixes) {\n    if (key.startsWith(prefix)) {\n      return; // eslint-disable-line  consistent-return\n    }\n  }\n  flushPromise = _flush();\n  flushPromise.then(() => {\n    flushPromise = null;\n  });\n  flushPromise.catch((error) => {\n    console.error(error);\n    flushPromise = null;\n  });\n  return flushPromise;\n};\n\nconst _flush = async () => { // eslint-disable-line no-underscore-dangle\n  await new Promise((resolve) => setTimeout(resolve, 30000));\n  requestAnimationFrame(() => {\n    const dump = braidClient.data.dump();\n    dump[0] = dump[0].filter((x) => cacheSet.has(x[0]));\n    const dumpString = JSON.stringify(dump);\n    Storage.set(dumpString);\n  });\n};\n\nconst loadQueue = [];\n\nconst loadAsync = async () => {\n  const dumpString = await Storage.get();\n  if (typeof dumpString === 'string') {\n    const dump = JSON.parse(dumpString);\n    braidClient.data.process(dump);\n    await new Promise((resolve) => setImmediate(resolve));\n  }\n  braidClient.data.on('affirm', (key:string) => {\n    affirmed[key] = true;\n    if (!cacheSet.has(key)) {\n      cacheSet.add(key);\n      flush(key);\n    }\n  });\n  braidClient.data.on('set', (key:string) => {\n    affirmed[key] = true;\n    cacheSet.add(key);\n    flush(key);\n  });\n  braidClient.data.on('delete', (key:string) => {\n    affirmed[key] = true;\n    cacheSet.delete(key);\n    flush(key);\n  });\n};\n\nbraidClient.data.on('set', (key:string, value:any) => {\n  let cached;\n  if (typeof value !== 'undefined') {\n    cached = fromJS(value);\n  }\n  cache[key] = cached;\n  const callbackSet = callbackMap.get(key);\n  if (!callbackSet) {\n    return;\n  }\n  for (const callback of callbackSet) { // eslint-disable-line no-restricted-syntax\n    callback(cached);\n  }\n});\n\nbraidClient.data.on('delete', (key:string) => {\n  delete cache[key];\n  const callbackSet = callbackMap.get(key);\n  if (!callbackSet) {\n    return;\n  }\n  for (const callback of callbackSet) {\n    callback();\n  }\n});\n\nlet isLoaded = false;\nconst loadStart = Date.now();\nloadAsync().then(() => {\n  metricsEmitter.emit('load', Date.now() - loadStart, { hasError: false });\n  isLoaded = true;\n  for (const [key, callback, errback, skipInitialCallback] of loadQueue) {\n    cachedSubscribe(key, callback, errback, skipInitialCallback);\n  }\n  loadQueue.length = 0;\n}).catch((error:Error) => {\n  metricsEmitter.emit('load', Date.now() - loadStart, { hasError: true, error: error.message });\n  isLoaded = true;\n  for (const [key, callback, errback, skipInitialCallback] of loadQueue) {\n    cachedSubscribe(key, callback, errback, skipInitialCallback);\n  }\n  loadQueue.length = 0;\n});\n\nconst subscribeWithErrorHandler = (key:string) => {\n  braidClient.subscribe(key).catch((error) => {\n    const errbackSet = errbackMap.get(key);\n    if (errbackSet) {\n      for (const eb of errbackSet) {\n        eb(error);\n      }\n    }\n    if (error.name === 'SubscribeError') {\n      if (error.code === 403) {\n        console.log(`User is not authorized to subscribe to ${key}`);\n      }\n      console.error(`Server error when subscribing to ${key}`);\n    } else {\n      console.log(`Error subscribing to ${key}: ${error.message}`);\n    }\n    braidClient.emit('error', error);\n  });\n};\n\nexport const cachedValue = (key?: string) => { // eslint-disable-line consistent-return\n  if (key) {\n    return cache[key];\n  }\n};\n\nconst wrappedCallbacks = new Map();\nconst wrappedErrbacks = new Map();\n\n\nexport const cachedSubscribe = (key: string, callback: (any) => void, errback?: (Error) => void, skipInitialCallback?: boolean = false) => {\n  if (!isLoaded) {\n    loadQueue.push([key, callback, errback, skipInitialCallback]);\n    return;\n  }\n  unsubscribeMap.delete(key);\n  let callbackSet = callbackMap.get(key);\n  const errbackSet = errbackMap.get(key);\n  const start = Date.now();\n  let receivedInitialValue = false;\n  const webSocket = !!braidClient.ws;\n  const wrappedCallback = (value:any) => {\n    if (!receivedInitialValue && (typeof value !== 'undefined' || affirmed[key] === true)) {\n      receivedInitialValue = true;\n      metricsEmitter.emit('subscribe', key, Date.now() - start, {\n        hasError: false,\n        cached: false,\n        skipInitialCallback,\n        webSocketWait: webSocket ? 0 : braidClientOpen - start,\n      });\n    }\n    return callback(value);\n  };\n  wrappedCallbacks.set(callback, wrappedCallback);\n  const wrappedErrback = typeof errback === 'function' ? ((error:Error) => {\n    if (!receivedInitialValue) {\n      receivedInitialValue = true;\n      metricsEmitter.emit('subscribe', key, Date.now() - start, {\n        hasError: true,\n        cached: false,\n        skipInitialCallback,\n        error: error.message,\n        webSocketWait: webSocket ? 0 : braidClientOpen - start,\n      });\n    }\n    return errback(error);\n  }) : ((error:Error) => {\n    if (!receivedInitialValue) {\n      receivedInitialValue = true;\n      metricsEmitter.emit('subscribe', key, Date.now() - start, {\n        hasError: true,\n        cached: false,\n        skipInitialCallback,\n        error: error.message,\n        webSocketWait: webSocket ? 0 : braidClientOpen - start,\n      });\n    }\n  });\n  wrappedErrbacks.set(errback || callback, wrappedErrback);\n  if (errbackSet) {\n    errbackSet.add(wrappedErrback);\n  } else {\n    errbackMap.set(key, new Set([wrappedErrback]));\n  }\n  if (callbackSet) {\n    callbackSet.add(wrappedCallback);\n  } else {\n    callbackSet = new Set([wrappedCallback]);\n    callbackMap.set(key, callbackSet);\n    subscribeWithErrorHandler(key);\n  }\n  const cached = cache[key];\n  if (typeof cached !== 'undefined' || affirmed[key] === true) {\n    receivedInitialValue = true;\n    metricsEmitter.emit('subscribe', key, Date.now() - start, {\n      hasError: false,\n      cached: true,\n      skipInitialCallback,\n      webSocketWait: 0,\n    });\n  }\n  if (!skipInitialCallback) {\n    callback(cached);\n  }\n};\n\nlet unsubscribeInterval;\n\nconst unsubscribeCheck = () => {\n  const now = Date.now();\n  for (const [key, time] of unsubscribeMap) {\n    if (now - time < 10000) {\n      continue;\n    }\n    unsubscribeMap.delete(key);\n    delete affirmed[key];\n    callbackMap.delete(key);\n    braidClient.unsubscribe(key);\n  }\n  if (unsubscribeMap.size === 0) {\n    clearInterval(unsubscribeInterval);\n    unsubscribeInterval = undefined;\n  }\n};\n\nexport const cachedUnsubscribe = (key:string, callback:(any) => void, errback?: (Error) => void) => {\n  const errbackSet = errbackMap.get(key);\n  if (errbackSet) {\n    const wrappedErrback = wrappedErrbacks.get(errback || callback);\n    if (typeof wrappedErrback !== 'function') {\n      throw new Error(`Wrapped errback does not exist for ${key}`);\n    }\n    errbackSet.delete(wrappedErrback);\n    if (errbackSet.size === 0) {\n      errbackMap.delete(key);\n    }\n  }\n  const callbackSet = callbackMap.get(key);\n  if (!callbackSet) {\n    braidClient.unsubscribe(key);\n    return;\n  }\n  const wrappedCallback = wrappedCallbacks.get(callback);\n  if (typeof wrappedCallback !== 'function') {\n    throw new Error(`Wrapped callback does not exist for ${key}`);\n  }\n  callbackSet.delete(wrappedCallback);\n  if (callbackSet.size === 0) {\n    unsubscribeMap.set(key, Date.now());\n    if (!unsubscribeInterval) {\n      unsubscribeInterval = setInterval(unsubscribeCheck, 5000);\n    }\n  }\n};\n\n\nexport const getReduxChannel = (key: string, defaultValue?: any):EventChannel<any> => eventChannel((emit: Function) => {\n  const handleValue = (value: any) => {\n    if (typeof value !== 'undefined') {\n      emit(value);\n    } else if (typeof defaultValue !== 'undefined') {\n      emit(defaultValue);\n    }\n  };\n  const handleError = (error: Error) => {\n    emit(error);\n  };\n  cachedSubscribe(key, handleValue, handleError);\n  return () => {\n    cachedUnsubscribe(key, handleValue, handleError);\n  };\n}, buffers.expanding(2));\n\nexport const cachedSnapshot = async (key:string, defaultValue?: any):Promise<any> => {\n  const cached = cache[key];\n  if (typeof cached !== 'undefined' || affirmed[key] === true) {\n    metricsEmitter.emit('snapshot', key, 0, {\n      hasError: false,\n      cached: true,\n      webSocketWait: 0,\n    });\n    if (typeof cached === 'undefined') {\n      return defaultValue;\n    }\n    return cached;\n  }\n  return snapshot(key, defaultValue);\n};\n\nexport const snapshot = async (key:string, defaultValue?: any):Promise<any> => {\n  const start = Date.now();\n  let receivedInitialValue = false;\n  const webSocket = !!braidClient.ws;\n  if (affirmed[key]) {\n    metricsEmitter.emit('snapshot', key, Date.now() - start, {\n      hasError: false,\n      cached: true,\n      webSocketWait: 0,\n    });\n    if (typeof cache[key] === 'undefined') {\n      return defaultValue;\n    }\n    return cache[key];\n  }\n  return new Promise((resolve, reject) => {\n    const handleValue = (value:any) => {\n      braidClient.data.removeListener('affirm', handleAffirm);\n      cachedUnsubscribe(key, handleValue, handleError);\n      if (typeof value === 'undefined') {\n        resolve(defaultValue);\n      } else {\n        resolve(value);\n      }\n    };\n    const handleError = (error: Error) => {\n      braidClient.data.removeListener('affirm', handleAffirm);\n      cachedUnsubscribe(key, handleValue, handleError);\n      reject(error);\n    };\n    const handleAffirm = (k:string, v:any) => {\n      if (k !== key) {\n        return;\n      }\n      braidClient.data.removeListener('affirm', handleAffirm);\n      if (!receivedInitialValue) {\n        receivedInitialValue = true;\n        metricsEmitter.emit('snapshot', key, Date.now() - start, {\n          hasError: false,\n          cached: false,\n          webSocketWait: webSocket ? 0 : braidClientOpen - start,\n        });\n      }\n      cachedUnsubscribe(key, handleValue, handleError);\n      const cached = cache[key];\n      if (typeof cached !== 'undefined') {\n        resolve(cached);\n        return;\n      }\n      if (typeof v !== 'undefined') {\n        const immutableValue = fromJS(v);\n        cache[key] = immutableValue;\n        resolve(immutableValue);\n        return;\n      }\n      resolve(defaultValue);\n    };\n    braidClient.data.on('affirm', handleAffirm);\n    unsubscribeMap.delete(key);\n    const wrappedErrback = (error:Error) => {\n      if (!receivedInitialValue) {\n        receivedInitialValue = true;\n        metricsEmitter.emit('snapshot', key, Date.now() - start, {\n          hasError: true,\n          cached: false,\n          error: error.message,\n          webSocketWait: webSocket ? 0 : braidClientOpen - start,\n        });\n      }\n      return handleError(error);\n    };\n    wrappedErrbacks.set(handleError, wrappedErrback);\n    let errbackSet = errbackMap.get(key);\n    if (!errbackSet) {\n      errbackSet = new Set();\n      errbackMap.set(key, errbackSet);\n    }\n    errbackSet.add(wrappedErrback);\n    const wrappedCallback = (value:any) => {\n      if (!receivedInitialValue && (typeof value !== 'undefined' || affirmed[key] === true)) {\n        receivedInitialValue = true;\n        metricsEmitter.emit('snapshot', key, Date.now() - start, {\n          hasError: false,\n          cached: false,\n          webSocketWait: webSocket ? 0 : braidClientOpen - start,\n        });\n      }\n      return handleValue(value);\n    };\n    wrappedCallbacks.set(handleValue, wrappedCallback);\n    let callbackSet = callbackMap.get(key);\n    if (callbackSet) {\n      callbackSet.add(wrappedCallback);\n      return;\n    }\n    callbackSet = new Set([wrappedCallback]);\n    callbackMap.set(key, callbackSet);\n    subscribeWithErrorHandler(key);\n  });\n};\n\nexport const triggerDelete = (key:string) => {\n  braidClient.data.delete(key);\n};\n"],"file":"index.js"}